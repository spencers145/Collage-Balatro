SMODS.Joker {
    key = "strange_fluid",
    config = {
        extra = {
            mult = 12,
            chips = 100,
            state = 1,
        }
    },
    add_to_deck = function(self, card, from_debuff)
        card.ability.extra.state = 2
    end,
    update = function(self, card, dt)
        if card.ability.extra.state == 1 then
            card.children.center:set_sprite_pos({x = 3, y = 3})
        elseif card.ability.extra.state == 2 then
            card.children.center:set_sprite_pos({x = 1, y = 4})
        else
            card.children.center:set_sprite_pos({x = 0, y = 4})
        end
    end,
    loc_vars = function(self, info_queue, card)
        if G.GAME.current_round.hands_left > G.GAME.current_round.discards_left then
            return {vars = {'+'..card.ability.extra.chips,localize('sarc_chips'),'',''}}
        elseif G.GAME.current_round.hands_left == G.GAME.current_round.discards_left then
            return {vars = {'+'..card.ability.extra.chips,localize('sarc_chips')..',','+'..card.ability.extra.mult,localize('sarc_mult')}}
        else
            return {vars = {'','','+'..card.ability.extra.mult,localize('sarc_mult')}}
        end
    end,
    rarity = 2,
    pos = { x = 3, y = 3 },
    atlas = 'sarcpot_atlas',
    cost = 7,
    discovered = false,
    unlocked = true,
    blueprint_compat = true,
    eternal_compat = true,
    soul_pos = nil,
    calculate = function(self, card, context)
        if context.after or (context.hands_updated and context.hands_mod>0) or context.setting_blind then
            G.E_MANAGER:add_event(Event({
                trigger = 'after',
                delay = 0.2,
                blocking = true,
                func = function()
                    local stored_state = card.ability.extra.state
                    if G.GAME.current_round.hands_left > G.GAME.current_round.discards_left then
                        card.ability.extra.state = 3
                    elseif G.GAME.current_round.hands_left == G.GAME.current_round.discards_left then
                        card.ability.extra.state = 2
                    else
                        card.ability.extra.state = 1
                    end
                    if stored_state ~= card.ability.extra.state then
                        card:juice_up()
                        play_sound('tarot1')
                    end
                    
                    return true
            end}))
            

        end
        if context.discards_updated then
                
            G.E_MANAGER:add_event(Event({
                trigger = 'after',
                delay = 0.2,
                blocking = true,
                func = function()
                    local stored_state = card.ability.extra.state
                    if G.GAME.current_round.hands_left > G.GAME.current_round.discards_left then
                        card.ability.extra.state = 3
                    elseif G.GAME.current_round.hands_left == G.GAME.current_round.discards_left then
                        card.ability.extra.state = 2
                    else
                        card.ability.extra.state = 1
                    end
                    if stored_state ~= card.ability.extra.state then
                        card:juice_up()
                        play_sound('tarot1')
                    end
                    return true
            end}))
        end
        if context.joker_main then
            if card.ability.extra.state==1 then
                return{
                    mult = card.ability.extra.mult
                }
            elseif card.ability.extra.state==2 then
                return{
                    mult = card.ability.extra.mult,
                    chips = card.ability.extra.chips
                } 
            else
                return{
                    chips = card.ability.extra.chips
                } 
            end
        end
    end
}
